$(document).ready(function() {
    highlightSelectedMenuItem ();
    highlightLoggedOnTeamName ();
    spawnBackgroundDots ();

    typeWriterSFX ();

    addNavbarMouseoverEffects ();
    addButtonMouseoverEffects ();
    addFooterMouseoverEffects ();
    addDropdownMouseoverEffects ();
    
    initialiseDialogs ();
    initialiseTooltips ();
    initialiseCountdowns ();

    setFormSubmissionBehaviour();
});

function initialiseDialogs() {
    initialiseLoginDialog();
    showPageLoadModalDialogs();
}

function initialiseLoginDialog() {
    $('#login-dialog').on('shown.bs.modal', function (e) {
        $('#login-dialog').find('input').first().focus();
    });
}

function showPageLoadModalDialogs() {
    $('.modal.on-page-load').modal();
}

function highlightSelectedMenuItem() {
    var path = window.location.pathname;
    var activeMenuItems = document.querySelectorAll('.nav a[href$="' + path + '"]');

    for (var i = 0; i < activeMenuItems.length; i++) {
        if (activeMenuItems[i] && activeMenuItems[i].parentNode) {
            activeMenuItems[i].parentNode.className = 'active';
        }
    }
}

function spawnBackgroundDots () {
    var backgroundDots = document.getElementById ("background-dots");
    var backgroundDotsCount = 15;

    for (var i = 0; i < backgroundDotsCount; i++) {
        var dot = document.createElement("div");
        dot.className = "background-dot";
        if (i == 0)
            dot.innerText = "07";
        else
            dot.innerText = "+";

        dot.style.top = (Math.random () * window.innerHeight) + "px";
        dot.style.left = (Math.random () * window.innerWidth) + "px";
        dot.style.transform = "scale(" + (0.5 + Math.random () * 0.5) + ")";
        backgroundDots.appendChild (dot);
    }
}

function addNavbarMouseoverEffects() {
    var navbarElements = document.getElementsByClassName ("chaffle");
    var audio_navbar = document.getElementById ("audio-navbar");
    var audio_navclick = document.getElementById ("audio-navclick");

    for (var i = 0, len = navbarElements.length; i < len; i++) {
        var element = navbarElements[i];

        if (!element.parentNode.classList.contains("active")) {
            const chaffle = new Chaffle (element);

            element.addEventListener("mouseover", function () {
                chaffle.init();
                audio_navbar.currentTime = 0;
                audio_navbar.play();
            });

            element.addEventListener("click", function () {
                audio_navclick.play();
            });
        }
    }
}

function addButtonMouseoverEffects() {
    var buttons = [...document.getElementsByClassName ("btn-primary"), ...document.getElementsByClassName ("btn-warning"), ...document.getElementsByClassName ("btn-danger")];
    var audio_button_mouseover = document.getElementById ("audio-button-mouseover");
    var audio_button_click = document.getElementById ("audio-button-click");

    for (var i = 0, len = buttons.length; i < len; i++) {
        if (!buttons[i].classList.contains("btn-xs")) {
            buttons[i].addEventListener("mouseover", function () {
                audio_button_mouseover.currentTime = 0;
                audio_button_mouseover.play();
            });

            buttons[i].addEventListener("click", function () {
                audio_button_click.currentTime = 0;
                audio_button_click.play();
            });

            buttons[i].addEventListener("mouseout", function () {
                audio_button_mouseover.pause();
            });
        }
    }

    buttons = [...document.getElementsByClassName ("btn-default"), ...document.getElementsByClassName ("close")];
    var audio_button_cancel_mouseover = document.getElementById ("audio-button-cancel-mouseover");
    var audio_button_cancel_click = document.getElementById ("audio-button-cancel-click");

    for (var i = 0, len = buttons.length; i < len; i++) {
        if (!buttons[i].classList.contains("btn-xs")) {
            buttons[i].addEventListener("mouseover", function () {
                audio_button_cancel_mouseover.currentTime = 0;
                audio_button_cancel_mouseover.play();
            });

            buttons[i].addEventListener("click", function () {
                audio_button_cancel_click.currentTime = 0;
                audio_button_cancel_click.play();
            });
        }
    }

    buttons = [...document.getElementsByClassName ("btn-xs")];
    var audio_button_small_mouseover = document.getElementById ("audio-button-small-mouseover");
    var audio_button_small_click = document.getElementById ("audio-button-small-click");

    for (var i = 0, len = buttons.length; i < len; i++) {
        buttons[i].addEventListener("mouseover", function () {
            audio_button_small_mouseover.currentTime = 0;
            audio_button_small_mouseover.play();
        });

        buttons[i].addEventListener("click", function () {
            audio_button_small_click.currentTime = 0;
            audio_button_small_click.play();
        });
    }
}

function addDropdownMouseoverEffects () {
    dropdowns = [...document.getElementsByClassName ("dropdown-menu")];
    var audio_dropdown_open = document.getElementById ("audio-dropdown-open");

    for (var i = 0, len = dropdowns.length; i < len; i++) {
        dropdowns[i].addEventListener("click", function () {
            audio_dropdown_open.currentTime = 0;
            audio_dropdown_open.play();
        });
    }
}

function addFooterMouseoverEffects () {
    var footer = document.getElementById ("footer-fade");
    var audio_footer_mouseover = document.getElementById ("audio-footer-mouseover");

    footer.addEventListener ("mouseenter", function () {
        audio_footer_mouseover.currentTime = 0;
        audio_footer_mouseover.play();
    });
}

function typeWriterSFX () {
    var typewriter = document.getElementsByClassName('typewriter')[0];
    var audio_typewriter = document.getElementById ("audio-typewriter");

    if (typewriter != undefined) {
        audio_typewriter.play ();
        setTimeout (function () {audio_typewriter.pause ()}, 200 + (1000 / 44) * typewriter.innerText.length);
    }
}

function highlightLoggedOnTeamName() {
    $(".team_" + global_dict["user_id"]).addClass("label label-info");
}

function initialiseCountdowns() {
    var $countdowns = $('[data-countdown]');
    var countdownsOnPage = $('[data-countdown]').length;

    if (countdownsOnPage) {
        setInterval(function() {
            $countdowns.each(function () {
                var $countdown = $(this);
                var availableUntil = $countdown.data('countdown');
                var availableUntilDate = new Date(availableUntil * 1000);
                var secondsLeft = Math.floor((availableUntilDate.getTime() - Date.now()) / 1000);

                var doneMessage = $countdown.attr('data-countdown-done') || 'No time remaining';
                var countdownMessage = secondsLeft <= 0 ? doneMessage : prettyPrintTime(secondsLeft);
                $countdown.text(countdownMessage);
            });

        }, 1000);
    }
}

function initialiseTooltips() {
    $('.has-tooltip').tooltip();
}

/**
 * Disable all buttons on page on form submit
 */
function setFormSubmissionBehaviour() {
    $('form').on('submit', function(e) {
        $('button').prop('disabled', true);
    });
}

function pluralise(number, name) {
    if (!number) {
        return '';
    }

    return number + ' ' + name + (number > 1 ? 's' : '');

}

function prettyPrintTime(seconds) {
    seconds = Math.floor(seconds);

    var minutes = Math.floor(seconds / 60);
    var hours = Math.floor(minutes / 60);
    var days = Math.floor(hours / 24);

    var daysWords = pluralise(days, 'day');
    var hoursWords = pluralise(hours % 24, 'hour');
    var minutesWords = pluralise(minutes % 60, 'minute');
    var secondsWords = pluralise(seconds % 60, 'second');

    var timeParts = [];
    if (daysWords) timeParts.push(daysWords);
    if (hoursWords) timeParts.push(hoursWords);
    if (minutesWords) timeParts.push(minutesWords);
    if (secondsWords) timeParts.push(secondsWords);

    return timeParts.join(', ') + ' remaining';
}
